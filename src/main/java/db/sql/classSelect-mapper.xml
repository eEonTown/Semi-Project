<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<!-- 전체 강의 수 조회  -->
	<entry key="selectListCountAll">
		SELECT COUNT(*) AS "COUNT"
		  FROM CLASS
	</entry>
	 	
	<!-- 전체 강의 리스트 최신순 조회 -->
	<entry key="selectListAll">
	 	 SELECT
	           CL_NO
	         , USER_NAME
	         , MT_COMPANY
	         , C.CLCG_NO AS CLCG_NO
	         , CL_TITLE
	         , CL_SUBTITLE
	         , CL_INFO
	         , CL_CURRI
	         , TO_CHAR(CL_PRICE, 'L99,999') AS CL_PRICE
	         , CL_ENROLLDATE
	         , CL_GRANT
	         , CL_THUMBNAILPATH
	         , REVIEW_SCORE
	      FROM CLASS
	      JOIN USERINFO USING(USER_NO)
	      JOIN CL_CATEGORY C ON(CL_CATEGORY = CLCG_NO)
	      JOIN MENTOR USING(USER_NO)
	      JOIN (SELECT CL_NO
	                 , NVL(ROUND(AVG(REVIEW_SCORE), 1), 0) AS REVIEW_SCORE
	              FROM CLASS
	              LEFT JOIN REVIEW USING(CL_NO)
	             GROUP BY CL_NO) A USING(CL_NO)
	    ORDER BY CL_NO DESC
    </entry>
    
    <!-- 카테고리별 강의 수 조회 -->
	<entry key="selectListCount">
		SELECT COUNT(*) AS "COUNT"
		  FROM CLASS
		 WHERE CL_CATEGORY = ?
	</entry>
    
	<!-- 카테고리별 강의 리스트 최신순 조회 -->
	<entry key="selectList">
	 	 SELECT
	           CL_NO
	         , USER_NAME
	         , MT_COMPANY
	         , C.CLCG_NO AS CLCG_NO
	         , CL_TITLE
	         , CL_SUBTITLE
	         , CL_INFO
	         , CL_CURRI
	         , TO_CHAR(CL_PRICE, 'L99,999') AS CL_PRICE
	         , CL_ENROLLDATE
	         , CL_GRANT
	         , CL_THUMBNAILPATH
	         , REVIEW_SCORE
	      FROM CLASS
	      JOIN USERINFO USING(USER_NO)
	      JOIN CL_CATEGORY C ON(CL_CATEGORY = CLCG_NO)
	      JOIN MENTOR USING(USER_NO)
	      JOIN (SELECT CL_NO
	                 , NVL(ROUND(AVG(REVIEW_SCORE), 1), 0) AS REVIEW_SCORE
	              FROM CLASS
	              LEFT JOIN REVIEW USING(CL_NO)
	             GROUP BY CL_NO) A USING(CL_NO)
	     WHERE CL_CATEGORY = ?
	     ORDER 
	     	BY CL_NO DESC
	</entry>
	
	<!-- 강의 정보 조회 -->
	<entry key="selectClass">
		SELECT
		       CL_NO
		     , USER_NAME  <!-- 이름으로 받아옴 -->
		     , CL_CATEGORY
		     , CL_TITLE
		     , CL_SUBTITLE
		     , CL_INFO
		     , CL_CURRI
		     , TO_CHAR(CL_PRICE, 'L99,999') AS CL_PRICE
		     , CL_THUMBNAILPATH <!-- 클래스 썸네일 이미지 -->
		     , LTR_INFO
		     , LTR_CAREER
		     , PROFILE_PATH <!-- 프로필 이미지 경로 -->
		  FROM CLASS
		  LEFT JOIN USERINFO USING(USER_NO)
		  LEFT JOIN LECTURER USING(USER_NO)
		 WHERE CL_GRANT = 'A'
		   AND CL_NO = ?
	</entry>
	
	<!-- 수강생 수 조회 -->
	<entry key="selectStudentCount">
		SELECT 
			   COUNT(*) AS STUDENT_COUNT
	 	  FROM CLASS_ING
	     WHERE CL_NO=?
     </entry>
     
     <entry key="selectBookmarkCount">
     	SELECT 
     		   COUNT(*) AS BOOKMARK_COUNT
  		  FROM BOOKMARK
 		 WHERE CL_NO=?
     </entry>
     
     <entry key="selectReview">
     	SELECT 
		       REVIEW_NO
		     , CL_NO
		     , USER_NAME
		     , REVIEW_SCORE
		     , REVIEW_CONTENT
		     , REVIEW_ENROLLDATE
		  FROM REVIEW
		  JOIN USERINFO USING(USER_NO)
		 WHERE CL_NO = ?
		 ORDER
		    BY REVIEW_NO DESC
     </entry>
    
     <!-- 전체 강의 수강료 순 조회 -->
     <entry key="selectListAllByPrice">
 	 	SELECT
	           CL_NO
	         , USER_NAME
	         , MT_COMPANY
	         , C.CLCG_NO AS CLCG_NO
	         , CL_TITLE
	         , CL_SUBTITLE
	         , CL_INFO
	         , CL_CURRI
	         , TO_CHAR(CL_PRICE, 'L99,999') AS CL_PRICE
	         , CL_ENROLLDATE
	         , CL_GRANT
	         , CL_THUMBNAILPATH
	         , REVIEW_SCORE
	      FROM CLASS
	      JOIN USERINFO USING(USER_NO)
	      JOIN CL_CATEGORY C ON(CL_CATEGORY = CLCG_NO)
	      JOIN MENTOR USING(USER_NO)
	      JOIN (SELECT CL_NO
	                 , NVL(ROUND(AVG(REVIEW_SCORE), 1), 0) AS REVIEW_SCORE
	              FROM CLASS
	              LEFT JOIN REVIEW USING(CL_NO)
	             GROUP BY CL_NO) A USING(CL_NO)
	    ORDER BY CL_PRICE DESC
    </entry>
    
    <entry key="selectListByPrice">
			 	 SELECT
	           CL_NO
	         , USER_NAME
	         , MT_COMPANY
	         , C.CLCG_NO AS CLCG_NO
	         , CL_TITLE
	         , CL_SUBTITLE
	         , CL_INFO
	         , CL_CURRI
	         , TO_CHAR(CL_PRICE, 'L99,999') AS CL_PRICE
	         , CL_ENROLLDATE
	         , CL_GRANT
	         , CL_THUMBNAILPATH
	         , REVIEW_SCORE
	      FROM CLASS
	      JOIN USERINFO USING(USER_NO)
	      JOIN CL_CATEGORY C ON(CL_CATEGORY = CLCG_NO)
	      JOIN MENTOR USING(USER_NO)
	      JOIN (SELECT CL_NO
	                 , NVL(ROUND(AVG(REVIEW_SCORE), 1), 0) AS REVIEW_SCORE
	              FROM CLASS
	              LEFT JOIN REVIEW USING(CL_NO)
	             GROUP BY CL_NO) A USING(CL_NO)
	     WHERE CL_CATEGORY = ?        
	     ORDER 
	        BY CL_PRICE DESC
    </entry>
    
    <entry key="selectListAllByScore">
	    SELECT
	           CL_NO
	         , USER_NAME
	         , MT_COMPANY
	         , C.CLCG_NO AS CLCG_NO
	         , CL_TITLE
	         , CL_SUBTITLE
	         , CL_INFO
	         , CL_CURRI
	         , TO_CHAR(CL_PRICE, 'L99,999') AS CL_PRICE
	         , CL_ENROLLDATE
	         , CL_GRANT
	         , CL_THUMBNAILPATH
	         , REVIEW_SCORE
	      FROM CLASS
	      JOIN USERINFO USING(USER_NO)
	      JOIN CL_CATEGORY C ON(CL_CATEGORY = CLCG_NO)
	      JOIN MENTOR USING(USER_NO)
	      JOIN (SELECT CL_NO
	                 , NVL(ROUND(AVG(REVIEW_SCORE), 1), 0) AS REVIEW_SCORE
	              FROM CLASS
	              LEFT JOIN REVIEW USING(CL_NO)
	             GROUP BY CL_NO) A USING(CL_NO)
	     ORDER 
	    	BY REVIEW_SCORE DESC
    </entry>
    
    <entry key="selectListByScore">
 	 SELECT
	           CL_NO
	         , USER_NAME
	         , MT_COMPANY
	         , C.CLCG_NO AS CLCG_NO
	         , CL_TITLE
	         , CL_SUBTITLE
	         , CL_INFO
	         , CL_CURRI
	         , TO_CHAR(CL_PRICE, 'L99,999') AS CL_PRICE
	         , CL_ENROLLDATE
	         , CL_GRANT
	         , CL_THUMBNAILPATH
	         , REVIEW_SCORE
	      FROM CLASS
	      JOIN USERINFO USING(USER_NO)
	      JOIN CL_CATEGORY C ON(CL_CATEGORY = CLCG_NO)
	      JOIN MENTOR USING(USER_NO)
	      JOIN (SELECT CL_NO
	                , NVL(ROUND(AVG(REVIEW_SCORE), 1), 0) AS REVIEW_SCORE
	              FROM CLASS
	              LEFT JOIN REVIEW USING(CL_NO)
	             GROUP BY CL_NO) A USING(CL_NO)
	     WHERE C.CLCG_NO = ?
	     ORDER 
	        BY REVIEW_SCORE DESC
    </entry>
    
    <entry key="selectClassList">
		SELECT CL_NO
		     , CL_TITLE
		     , CL_SUBTITLE
		     , USER_NAME
		     , CLCG_NAME
		     , CL_THUMBNAILPATH
		  FROM CLASS C
		  JOIN USERINFO U ON (C.USER_NO = U.USER_NO)
		  JOIN CL_CATEGORY CC ON (C.CL_CATEGORY = CC.CLCG_NO)
		  WHERE CL_TITLE LIKE UPPER(?)
		     OR CL_SUBTITLE LIKE UPPER(?)
		     OR USER_NAME LIKE UPPER(?)
    </entry>
    
        <!-- 수강신청용 강의 정보 -->
    <entry key="selectClassEnroll">
	    SELECT
		       CL_NO
		     , CL_TITLE
		     , USER_NAME
		     , TO_CHAR(CL_PRICE, 'L99,999') AS CL_PRICE
		     , CL_THUMBNAILPATH
		  FROM CLASS
		  JOIN USERINFO USING(USER_NO)
		 WHERE CL_NO = ?
    </entry>
    
        <!-- 회원별 보유 쿠폰 조회 (사용 가능한 쿠폰) -->
    <entry key="selectCouponList">
	    SELECT
		       ISUCP_NO
		     , CP_NAME
  		     , CP_NO
		     , CP_ENDDATE
		     , TO_CHAR(DISCOUNT, 'L99,999') AS DISCOUNT
		  FROM ISSUANCECOUPON I  
		  JOIN USERINFO USING(USER_NO)
		  JOIN COUPON USING(CP_NO)
		 WHERE I.CP_STATUS = 'N' <!-- 미사용 쿠폰만 조회 -->
		   AND TO_CHAR(CP_ENDDATE, 'RRMMDD') >= TO_CHAR(SYSDATE, 'RRMMDD') <!-- 발급일이 지나지 않은 사용 가능한 쿠폰만 조회 -->
		   AND USER_NO = ?
		 ORDER 
		    BY ISUCP_NO
    </entry>
</properties>